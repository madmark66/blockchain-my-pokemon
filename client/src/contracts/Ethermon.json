{
  "contractName": "Ethermon",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gameOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "monsters",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "level",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "get",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMonji",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_attackingMonster",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_defendingMonster",
          "type": "uint256"
        }
      ],
      "name": "battle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "createNewMonster",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_attackingMonster\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_defendingMonster\",\"type\":\"uint256\"}],\"name\":\"battle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"createNewMonster\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMonji\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"monsters\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/all code/Blockchain/my-pokemon/contracts/Ethermon.sol\":\"Ethermon\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/all code/Blockchain/my-pokemon/contracts/Ethermon.sol\":{\"keccak256\":\"0xeaf8220ad3cfe3a0bd6837102664cf4a921f5551f5d620a7ea0b70f67786e9c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec61452c19ca5ac6ad3fb313441d7e78cd660309f51d9d537e8c8ed676c0a1de\",\"dweb:/ipfs/QmZ8NQJcFoDqFgALS1bWARb6j5vuWNP6c8pKsJ5ifG21vN\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x7d2b8ba4b256bfcac347991b75242f9bc37f499c5236af50cf09d0b35943dc0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8eeaf6afe00229af4c232ca058bb08b7a24cc3886f0b387159ac49ffd8b5312\",\"dweb:/ipfs/QmdnVKmDDWDvdRr6vtrxy3G6WafqA2TAhUZv1UFMsm4B4r\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e7820bcf567e6892d937c3cb10db263a4042e446799bca602535868d822384e\",\"dweb:/ipfs/QmPG2oeDjKncqsEeyYGjAN7CwAJmMgHterXGGnpzhha4z7\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e604bcdcd5e5b2fb299ad09769cde6db19d5aa1929d1b5e939234a0f10d7eb8\",\"dweb:/ipfs/Qmd8hXE3GZfBHuWx3RNiYgFW2ci7KvHtib8DiwzJ2dgo9V\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xd32fb7f530a914b1083d10a6bed3a586f2451952fec04fe542bcc670a82f7ba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af63ab940a34687c45f0ad84960b048fc5f49330c92ccb422db7822a444733b9\",\"dweb:/ipfs/QmUShaQEu8HS1GjDnsMJQ8jkZEBrecn6NuDZ3pfjY1gVck\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x391d3ba97ab6856a16b225d6ee29617ad15ff00db70f3b4df1ab5ea33aa47c9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d636ba90bbbeed04a1ea7fe9ec2466757e30fd38ba2ca173636dbf69a518735e\",\"dweb:/ipfs/QmQwCB2BHnEuYR22PYt9HkpbgeFDhq4rHmaYqAZbX3WRC7\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
  "bytecode": "0x60806040526040518060400160405280600881526020017f6920747269656420000000000000000000000000000000000000000000000000815250600690805190602001906200005192919062000163565b503480156200005f57600080fd5b506040518060400160405280600281526020017f41420000000000000000000000000000000000000000000000000000000000008152506040518060400160405280600281526020017f43430000000000000000000000000000000000000000000000000000000000008152508160009080519060200190620000e492919062000163565b508060019080519060200190620000fd92919062000163565b50505033600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000153604e6200015960201b60201c565b62000278565b8060078190555050565b828054620001719062000213565b90600052602060002090601f016020900481019282620001955760008555620001e1565b82601f10620001b057805160ff1916838001178555620001e1565b82800160010185558215620001e1579182015b82811115620001e0578251825591602001919060010190620001c3565b5b509050620001f09190620001f4565b5090565b5b808211156200020f576000816000905550600101620001f5565b5090565b600060028204905060018216806200022c57607f821691505b6020821081141562000243576200024262000249565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b612e6f80620002886000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80636352211e116100ad578063b88d4fde11610071578063b88d4fde1461032d578063c0576b7314610349578063c87b56dd1461037a578063e985e9c5146103aa578063f6b12f28146103da5761012c565b80636352211e146102755780636d4ce63c146102a557806370a08231146102c357806395d89b41146102f3578063a22cb465146103115761012c565b80631bc9ed1d116100f45780631bc9ed1d146101e757806323b872dd146102055780632a0c52211461022157806342842e0e1461023d57806360fe47b1146102595761012c565b806301ffc9a71461013157806306fdde0314610161578063081812fc1461017f578063095ea7b3146101af578063115dd1ab146101cb575b600080fd5b61014b60048036038101906101469190611f43565b6103f8565b6040516101589190612797565b60405180910390f35b6101696104da565b60405161017691906127b2565b60405180910390f35b61019960048036038101906101949190611fe9565b61056c565b6040516101a69190612730565b60405180910390f35b6101c960048036038101906101c49190611f07565b6105f1565b005b6101e560048036038101906101e09190611f95565b610709565b005b6101ef61081c565b6040516101fc91906127b2565b60405180910390f35b61021f600480360381019061021a9190611e01565b6108ae565b005b61023b60048036038101906102369190612012565b61090e565b005b61025760048036038101906102529190611e01565b610aa9565b005b610273600480360381019061026e9190611fe9565b610ac9565b005b61028f600480360381019061028a9190611fe9565b610ad3565b60405161029c9190612730565b60405180910390f35b6102ad610b85565b6040516102ba9190612a04565b60405180910390f35b6102dd60048036038101906102d89190611d9c565b610b8f565b6040516102ea9190612a04565b60405180910390f35b6102fb610c47565b60405161030891906127b2565b60405180910390f35b61032b60048036038101906103269190611ecb565b610cd9565b005b61034760048036038101906103429190611e50565b610e5a565b005b610363600480360381019061035e9190611fe9565b610ebc565b6040516103719291906127d4565b60405180910390f35b610394600480360381019061038f9190611fe9565b610f78565b6040516103a191906127b2565b60405180910390f35b6103c460048036038101906103bf9190611dc5565b61101f565b6040516103d19190612797565b60405180910390f35b6103e26110b3565b6040516103ef9190612730565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104c357507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104d357506104d2826110d9565b5b9050919050565b6060600080546104e990612c64565b80601f016020809104026020016040519081016040528092919081815260200182805461051590612c64565b80156105625780601f1061053757610100808354040283529160200191610562565b820191906000526020600020905b81548152906001019060200180831161054557829003601f168201915b5050505050905090565b600061057782611143565b6105b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ad90612964565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006105fc82610ad3565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561066d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610664906129c4565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661068c6111af565b73ffffffffffffffffffffffffffffffffffffffff1614806106bb57506106ba816106b56111af565b61101f565b5b6106fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f1906128e4565b60405180910390fd5b61070483836111b7565b505050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610799576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079090612844565b60405180910390fd5b6000600880549050905060086040518060400160405280858152602001600181525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000019080519060200190610800929190611bc0565b506020820151816001015550506108178282611270565b505050565b60606006805461082b90612c64565b80601f016020809104026020016040519081016040528092919081815260200182805461085790612c64565b80156108a45780601f10610879576101008083540402835291602001916108a4565b820191906000526020600020905b81548152906001019060200180831161088757829003601f168201915b5050505050905090565b6108bf6108b96111af565b8261128e565b6108fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f5906129e4565b60405180910390fd5b61090983838361136c565b505050565b813373ffffffffffffffffffffffffffffffffffffffff1661092f82610ad3565b73ffffffffffffffffffffffffffffffffffffffff1614610985576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097c90612864565b60405180910390fd5b6000600884815481106109c1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600202019050600060088481548110610a0d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906002020190508060010154826001015410610a69576002826001016000828254610a419190612af3565b925050819055506001816001016000828254610a5d9190612af3565b92505081905550610aa2565b6001826001016000828254610a7e9190612af3565b925050819055506002826001016000828254610a9a9190612af3565b925050819055505b5050505050565b610ac483838360405180602001604052806000815250610e5a565b505050565b8060078190555050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7390612924565b60405180910390fd5b80915050919050565b6000600754905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf790612904565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060018054610c5690612c64565b80601f0160208091040260200160405190810160405280929190818152602001828054610c8290612c64565b8015610ccf5780601f10610ca457610100808354040283529160200191610ccf565b820191906000526020600020905b815481529060010190602001808311610cb257829003601f168201915b5050505050905090565b610ce16111af565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d46906128a4565b60405180910390fd5b8060056000610d5c6111af565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610e096111af565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610e4e9190612797565b60405180910390a35050565b610e6b610e656111af565b8361128e565b610eaa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea1906129e4565b60405180910390fd5b610eb6848484846115c8565b50505050565b60088181548110610ecc57600080fd5b9060005260206000209060020201600091509050806000018054610eef90612c64565b80601f0160208091040260200160405190810160405280929190818152602001828054610f1b90612c64565b8015610f685780601f10610f3d57610100808354040283529160200191610f68565b820191906000526020600020905b815481529060010190602001808311610f4b57829003601f168201915b5050505050908060010154905082565b6060610f8382611143565b610fc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb9906129a4565b60405180910390fd5b6000610fcc611624565b90506000815111610fec5760405180602001604052806000815250611017565b80610ff68461163b565b60405160200161100792919061270c565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff1661122a83610ad3565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b61128a8282604051806020016040528060008152506117e8565b5050565b600061129982611143565b6112d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112cf906128c4565b60405180910390fd5b60006112e383610ad3565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061135257508373ffffffffffffffffffffffffffffffffffffffff1661133a8461056c565b73ffffffffffffffffffffffffffffffffffffffff16145b806113635750611362818561101f565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1661138c82610ad3565b73ffffffffffffffffffffffffffffffffffffffff16146113e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113d990612984565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611452576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161144990612884565b60405180910390fd5b61145d838383611843565b6114686000826111b7565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546114b89190612b7a565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461150f9190612af3565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6115d384848461136c565b6115df84848484611848565b61161e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161161590612804565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000821415611683576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506117e3565b600082905060005b600082146116b557808061169e90612c96565b915050600a826116ae9190612b49565b915061168b565b60008167ffffffffffffffff8111156116f7577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156117295781602001600182028036833780820191505090505b5090505b600085146117dc576001826117429190612b7a565b9150600a856117519190612cdf565b603061175d9190612af3565b60f81b818381518110611799577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856117d59190612b49565b945061172d565b8093505050505b919050565b6117f283836119df565b6117ff6000848484611848565b61183e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161183590612804565b60405180910390fd5b505050565b505050565b60006118698473ffffffffffffffffffffffffffffffffffffffff16611bad565b156119d2578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026118926111af565b8786866040518563ffffffff1660e01b81526004016118b4949392919061274b565b602060405180830381600087803b1580156118ce57600080fd5b505af19250505080156118ff57506040513d601f19601f820116820180604052508101906118fc9190611f6c565b60015b611982573d806000811461192f576040519150601f19603f3d011682016040523d82523d6000602084013e611934565b606091505b5060008151141561197a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161197190612804565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506119d7565b600190505b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611a4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a4690612944565b60405180910390fd5b611a5881611143565b15611a98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a8f90612824565b60405180910390fd5b611aa460008383611843565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611af49190612af3565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600080823b905060008111915050919050565b828054611bcc90612c64565b90600052602060002090601f016020900481019282611bee5760008555611c35565b82601f10611c0757805160ff1916838001178555611c35565b82800160010185558215611c35579182015b82811115611c34578251825591602001919060010190611c19565b5b509050611c429190611c46565b5090565b5b80821115611c5f576000816000905550600101611c47565b5090565b6000611c76611c7184612a50565b612a1f565b905082815260208101848484011115611c8e57600080fd5b611c99848285612c22565b509392505050565b6000611cb4611caf84612a80565b612a1f565b905082815260208101848484011115611ccc57600080fd5b611cd7848285612c22565b509392505050565b600081359050611cee81612ddd565b92915050565b600081359050611d0381612df4565b92915050565b600081359050611d1881612e0b565b92915050565b600081519050611d2d81612e0b565b92915050565b600082601f830112611d4457600080fd5b8135611d54848260208601611c63565b91505092915050565b600082601f830112611d6e57600080fd5b8135611d7e848260208601611ca1565b91505092915050565b600081359050611d9681612e22565b92915050565b600060208284031215611dae57600080fd5b6000611dbc84828501611cdf565b91505092915050565b60008060408385031215611dd857600080fd5b6000611de685828601611cdf565b9250506020611df785828601611cdf565b9150509250929050565b600080600060608486031215611e1657600080fd5b6000611e2486828701611cdf565b9350506020611e3586828701611cdf565b9250506040611e4686828701611d87565b9150509250925092565b60008060008060808587031215611e6657600080fd5b6000611e7487828801611cdf565b9450506020611e8587828801611cdf565b9350506040611e9687828801611d87565b925050606085013567ffffffffffffffff811115611eb357600080fd5b611ebf87828801611d33565b91505092959194509250565b60008060408385031215611ede57600080fd5b6000611eec85828601611cdf565b9250506020611efd85828601611cf4565b9150509250929050565b60008060408385031215611f1a57600080fd5b6000611f2885828601611cdf565b9250506020611f3985828601611d87565b9150509250929050565b600060208284031215611f5557600080fd5b6000611f6384828501611d09565b91505092915050565b600060208284031215611f7e57600080fd5b6000611f8c84828501611d1e565b91505092915050565b60008060408385031215611fa857600080fd5b600083013567ffffffffffffffff811115611fc257600080fd5b611fce85828601611d5d565b9250506020611fdf85828601611cdf565b9150509250929050565b600060208284031215611ffb57600080fd5b600061200984828501611d87565b91505092915050565b6000806040838503121561202557600080fd5b600061203385828601611d87565b925050602061204485828601611d87565b9150509250929050565b61205781612bae565b82525050565b61206681612bc0565b82525050565b600061207782612ab0565b6120818185612ac6565b9350612091818560208601612c31565b61209a81612dcc565b840191505092915050565b60006120b082612abb565b6120ba8185612ad7565b93506120ca818560208601612c31565b6120d381612dcc565b840191505092915050565b60006120e982612abb565b6120f38185612ae8565b9350612103818560208601612c31565b80840191505092915050565b600061211c603283612ad7565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b6000612182601c83612ad7565b91507f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006000830152602082019050919050565b60006121c2602783612ad7565b91507f4f6e6c792067616d65206f776e65722063616e20637265617465206e6577206d60008301527f6f6e7374657273000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612228602283612ad7565b91507f4d757374206265206f776e6572206f66206d6f6e7374657220746f206261747460008301527f6c650000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061228e602483612ad7565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006122f4601983612ad7565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b6000612334602c83612ad7565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b600061239a603883612ad7565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008301527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006020830152604082019050919050565b6000612400602a83612ad7565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b6000612466602983612ad7565b91507f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008301527f656e7420746f6b656e00000000000000000000000000000000000000000000006020830152604082019050919050565b60006124cc602083612ad7565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b600061250c602c83612ad7565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b6000612572602983612ad7565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b60006125d8602f83612ad7565b91507f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008301527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006020830152604082019050919050565b600061263e602183612ad7565b91507f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006126a4603183612ad7565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b61270681612c18565b82525050565b600061271882856120de565b915061272482846120de565b91508190509392505050565b6000602082019050612745600083018461204e565b92915050565b6000608082019050612760600083018761204e565b61276d602083018661204e565b61277a60408301856126fd565b818103606083015261278c818461206c565b905095945050505050565b60006020820190506127ac600083018461205d565b92915050565b600060208201905081810360008301526127cc81846120a5565b905092915050565b600060408201905081810360008301526127ee81856120a5565b90506127fd60208301846126fd565b9392505050565b6000602082019050818103600083015261281d8161210f565b9050919050565b6000602082019050818103600083015261283d81612175565b9050919050565b6000602082019050818103600083015261285d816121b5565b9050919050565b6000602082019050818103600083015261287d8161221b565b9050919050565b6000602082019050818103600083015261289d81612281565b9050919050565b600060208201905081810360008301526128bd816122e7565b9050919050565b600060208201905081810360008301526128dd81612327565b9050919050565b600060208201905081810360008301526128fd8161238d565b9050919050565b6000602082019050818103600083015261291d816123f3565b9050919050565b6000602082019050818103600083015261293d81612459565b9050919050565b6000602082019050818103600083015261295d816124bf565b9050919050565b6000602082019050818103600083015261297d816124ff565b9050919050565b6000602082019050818103600083015261299d81612565565b9050919050565b600060208201905081810360008301526129bd816125cb565b9050919050565b600060208201905081810360008301526129dd81612631565b9050919050565b600060208201905081810360008301526129fd81612697565b9050919050565b6000602082019050612a1960008301846126fd565b92915050565b6000604051905081810181811067ffffffffffffffff82111715612a4657612a45612d9d565b5b8060405250919050565b600067ffffffffffffffff821115612a6b57612a6a612d9d565b5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115612a9b57612a9a612d9d565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000612afe82612c18565b9150612b0983612c18565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612b3e57612b3d612d10565b5b828201905092915050565b6000612b5482612c18565b9150612b5f83612c18565b925082612b6f57612b6e612d3f565b5b828204905092915050565b6000612b8582612c18565b9150612b9083612c18565b925082821015612ba357612ba2612d10565b5b828203905092915050565b6000612bb982612bf8565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015612c4f578082015181840152602081019050612c34565b83811115612c5e576000848401525b50505050565b60006002820490506001821680612c7c57607f821691505b60208210811415612c9057612c8f612d6e565b5b50919050565b6000612ca182612c18565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612cd457612cd3612d10565b5b600182019050919050565b6000612cea82612c18565b9150612cf583612c18565b925082612d0557612d04612d3f565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b612de681612bae565b8114612df157600080fd5b50565b612dfd81612bc0565b8114612e0857600080fd5b50565b612e1481612bcc565b8114612e1f57600080fd5b50565b612e2b81612c18565b8114612e3657600080fd5b5056fea2646970667358221220367d9da988741fe33c66e34210ac3ab768739eccc1ee97181a7f9434ff3eabbf64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061012c5760003560e01c80636352211e116100ad578063b88d4fde11610071578063b88d4fde1461032d578063c0576b7314610349578063c87b56dd1461037a578063e985e9c5146103aa578063f6b12f28146103da5761012c565b80636352211e146102755780636d4ce63c146102a557806370a08231146102c357806395d89b41146102f3578063a22cb465146103115761012c565b80631bc9ed1d116100f45780631bc9ed1d146101e757806323b872dd146102055780632a0c52211461022157806342842e0e1461023d57806360fe47b1146102595761012c565b806301ffc9a71461013157806306fdde0314610161578063081812fc1461017f578063095ea7b3146101af578063115dd1ab146101cb575b600080fd5b61014b60048036038101906101469190611f43565b6103f8565b6040516101589190612797565b60405180910390f35b6101696104da565b60405161017691906127b2565b60405180910390f35b61019960048036038101906101949190611fe9565b61056c565b6040516101a69190612730565b60405180910390f35b6101c960048036038101906101c49190611f07565b6105f1565b005b6101e560048036038101906101e09190611f95565b610709565b005b6101ef61081c565b6040516101fc91906127b2565b60405180910390f35b61021f600480360381019061021a9190611e01565b6108ae565b005b61023b60048036038101906102369190612012565b61090e565b005b61025760048036038101906102529190611e01565b610aa9565b005b610273600480360381019061026e9190611fe9565b610ac9565b005b61028f600480360381019061028a9190611fe9565b610ad3565b60405161029c9190612730565b60405180910390f35b6102ad610b85565b6040516102ba9190612a04565b60405180910390f35b6102dd60048036038101906102d89190611d9c565b610b8f565b6040516102ea9190612a04565b60405180910390f35b6102fb610c47565b60405161030891906127b2565b60405180910390f35b61032b60048036038101906103269190611ecb565b610cd9565b005b61034760048036038101906103429190611e50565b610e5a565b005b610363600480360381019061035e9190611fe9565b610ebc565b6040516103719291906127d4565b60405180910390f35b610394600480360381019061038f9190611fe9565b610f78565b6040516103a191906127b2565b60405180910390f35b6103c460048036038101906103bf9190611dc5565b61101f565b6040516103d19190612797565b60405180910390f35b6103e26110b3565b6040516103ef9190612730565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104c357507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104d357506104d2826110d9565b5b9050919050565b6060600080546104e990612c64565b80601f016020809104026020016040519081016040528092919081815260200182805461051590612c64565b80156105625780601f1061053757610100808354040283529160200191610562565b820191906000526020600020905b81548152906001019060200180831161054557829003601f168201915b5050505050905090565b600061057782611143565b6105b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ad90612964565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006105fc82610ad3565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561066d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610664906129c4565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661068c6111af565b73ffffffffffffffffffffffffffffffffffffffff1614806106bb57506106ba816106b56111af565b61101f565b5b6106fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f1906128e4565b60405180910390fd5b61070483836111b7565b505050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610799576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079090612844565b60405180910390fd5b6000600880549050905060086040518060400160405280858152602001600181525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000019080519060200190610800929190611bc0565b506020820151816001015550506108178282611270565b505050565b60606006805461082b90612c64565b80601f016020809104026020016040519081016040528092919081815260200182805461085790612c64565b80156108a45780601f10610879576101008083540402835291602001916108a4565b820191906000526020600020905b81548152906001019060200180831161088757829003601f168201915b5050505050905090565b6108bf6108b96111af565b8261128e565b6108fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f5906129e4565b60405180910390fd5b61090983838361136c565b505050565b813373ffffffffffffffffffffffffffffffffffffffff1661092f82610ad3565b73ffffffffffffffffffffffffffffffffffffffff1614610985576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097c90612864565b60405180910390fd5b6000600884815481106109c1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600202019050600060088481548110610a0d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906002020190508060010154826001015410610a69576002826001016000828254610a419190612af3565b925050819055506001816001016000828254610a5d9190612af3565b92505081905550610aa2565b6001826001016000828254610a7e9190612af3565b925050819055506002826001016000828254610a9a9190612af3565b925050819055505b5050505050565b610ac483838360405180602001604052806000815250610e5a565b505050565b8060078190555050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7390612924565b60405180910390fd5b80915050919050565b6000600754905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf790612904565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060018054610c5690612c64565b80601f0160208091040260200160405190810160405280929190818152602001828054610c8290612c64565b8015610ccf5780601f10610ca457610100808354040283529160200191610ccf565b820191906000526020600020905b815481529060010190602001808311610cb257829003601f168201915b5050505050905090565b610ce16111af565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d46906128a4565b60405180910390fd5b8060056000610d5c6111af565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610e096111af565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610e4e9190612797565b60405180910390a35050565b610e6b610e656111af565b8361128e565b610eaa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea1906129e4565b60405180910390fd5b610eb6848484846115c8565b50505050565b60088181548110610ecc57600080fd5b9060005260206000209060020201600091509050806000018054610eef90612c64565b80601f0160208091040260200160405190810160405280929190818152602001828054610f1b90612c64565b8015610f685780601f10610f3d57610100808354040283529160200191610f68565b820191906000526020600020905b815481529060010190602001808311610f4b57829003601f168201915b5050505050908060010154905082565b6060610f8382611143565b610fc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb9906129a4565b60405180910390fd5b6000610fcc611624565b90506000815111610fec5760405180602001604052806000815250611017565b80610ff68461163b565b60405160200161100792919061270c565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff1661122a83610ad3565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b61128a8282604051806020016040528060008152506117e8565b5050565b600061129982611143565b6112d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112cf906128c4565b60405180910390fd5b60006112e383610ad3565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061135257508373ffffffffffffffffffffffffffffffffffffffff1661133a8461056c565b73ffffffffffffffffffffffffffffffffffffffff16145b806113635750611362818561101f565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1661138c82610ad3565b73ffffffffffffffffffffffffffffffffffffffff16146113e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113d990612984565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611452576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161144990612884565b60405180910390fd5b61145d838383611843565b6114686000826111b7565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546114b89190612b7a565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461150f9190612af3565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6115d384848461136c565b6115df84848484611848565b61161e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161161590612804565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000821415611683576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506117e3565b600082905060005b600082146116b557808061169e90612c96565b915050600a826116ae9190612b49565b915061168b565b60008167ffffffffffffffff8111156116f7577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156117295781602001600182028036833780820191505090505b5090505b600085146117dc576001826117429190612b7a565b9150600a856117519190612cdf565b603061175d9190612af3565b60f81b818381518110611799577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856117d59190612b49565b945061172d565b8093505050505b919050565b6117f283836119df565b6117ff6000848484611848565b61183e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161183590612804565b60405180910390fd5b505050565b505050565b60006118698473ffffffffffffffffffffffffffffffffffffffff16611bad565b156119d2578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026118926111af565b8786866040518563ffffffff1660e01b81526004016118b4949392919061274b565b602060405180830381600087803b1580156118ce57600080fd5b505af19250505080156118ff57506040513d601f19601f820116820180604052508101906118fc9190611f6c565b60015b611982573d806000811461192f576040519150601f19603f3d011682016040523d82523d6000602084013e611934565b606091505b5060008151141561197a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161197190612804565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506119d7565b600190505b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611a4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a4690612944565b60405180910390fd5b611a5881611143565b15611a98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a8f90612824565b60405180910390fd5b611aa460008383611843565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611af49190612af3565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600080823b905060008111915050919050565b828054611bcc90612c64565b90600052602060002090601f016020900481019282611bee5760008555611c35565b82601f10611c0757805160ff1916838001178555611c35565b82800160010185558215611c35579182015b82811115611c34578251825591602001919060010190611c19565b5b509050611c429190611c46565b5090565b5b80821115611c5f576000816000905550600101611c47565b5090565b6000611c76611c7184612a50565b612a1f565b905082815260208101848484011115611c8e57600080fd5b611c99848285612c22565b509392505050565b6000611cb4611caf84612a80565b612a1f565b905082815260208101848484011115611ccc57600080fd5b611cd7848285612c22565b509392505050565b600081359050611cee81612ddd565b92915050565b600081359050611d0381612df4565b92915050565b600081359050611d1881612e0b565b92915050565b600081519050611d2d81612e0b565b92915050565b600082601f830112611d4457600080fd5b8135611d54848260208601611c63565b91505092915050565b600082601f830112611d6e57600080fd5b8135611d7e848260208601611ca1565b91505092915050565b600081359050611d9681612e22565b92915050565b600060208284031215611dae57600080fd5b6000611dbc84828501611cdf565b91505092915050565b60008060408385031215611dd857600080fd5b6000611de685828601611cdf565b9250506020611df785828601611cdf565b9150509250929050565b600080600060608486031215611e1657600080fd5b6000611e2486828701611cdf565b9350506020611e3586828701611cdf565b9250506040611e4686828701611d87565b9150509250925092565b60008060008060808587031215611e6657600080fd5b6000611e7487828801611cdf565b9450506020611e8587828801611cdf565b9350506040611e9687828801611d87565b925050606085013567ffffffffffffffff811115611eb357600080fd5b611ebf87828801611d33565b91505092959194509250565b60008060408385031215611ede57600080fd5b6000611eec85828601611cdf565b9250506020611efd85828601611cf4565b9150509250929050565b60008060408385031215611f1a57600080fd5b6000611f2885828601611cdf565b9250506020611f3985828601611d87565b9150509250929050565b600060208284031215611f5557600080fd5b6000611f6384828501611d09565b91505092915050565b600060208284031215611f7e57600080fd5b6000611f8c84828501611d1e565b91505092915050565b60008060408385031215611fa857600080fd5b600083013567ffffffffffffffff811115611fc257600080fd5b611fce85828601611d5d565b9250506020611fdf85828601611cdf565b9150509250929050565b600060208284031215611ffb57600080fd5b600061200984828501611d87565b91505092915050565b6000806040838503121561202557600080fd5b600061203385828601611d87565b925050602061204485828601611d87565b9150509250929050565b61205781612bae565b82525050565b61206681612bc0565b82525050565b600061207782612ab0565b6120818185612ac6565b9350612091818560208601612c31565b61209a81612dcc565b840191505092915050565b60006120b082612abb565b6120ba8185612ad7565b93506120ca818560208601612c31565b6120d381612dcc565b840191505092915050565b60006120e982612abb565b6120f38185612ae8565b9350612103818560208601612c31565b80840191505092915050565b600061211c603283612ad7565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b6000612182601c83612ad7565b91507f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006000830152602082019050919050565b60006121c2602783612ad7565b91507f4f6e6c792067616d65206f776e65722063616e20637265617465206e6577206d60008301527f6f6e7374657273000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612228602283612ad7565b91507f4d757374206265206f776e6572206f66206d6f6e7374657220746f206261747460008301527f6c650000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061228e602483612ad7565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006122f4601983612ad7565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b6000612334602c83612ad7565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b600061239a603883612ad7565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008301527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006020830152604082019050919050565b6000612400602a83612ad7565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b6000612466602983612ad7565b91507f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008301527f656e7420746f6b656e00000000000000000000000000000000000000000000006020830152604082019050919050565b60006124cc602083612ad7565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b600061250c602c83612ad7565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b6000612572602983612ad7565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b60006125d8602f83612ad7565b91507f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008301527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006020830152604082019050919050565b600061263e602183612ad7565b91507f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006126a4603183612ad7565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b61270681612c18565b82525050565b600061271882856120de565b915061272482846120de565b91508190509392505050565b6000602082019050612745600083018461204e565b92915050565b6000608082019050612760600083018761204e565b61276d602083018661204e565b61277a60408301856126fd565b818103606083015261278c818461206c565b905095945050505050565b60006020820190506127ac600083018461205d565b92915050565b600060208201905081810360008301526127cc81846120a5565b905092915050565b600060408201905081810360008301526127ee81856120a5565b90506127fd60208301846126fd565b9392505050565b6000602082019050818103600083015261281d8161210f565b9050919050565b6000602082019050818103600083015261283d81612175565b9050919050565b6000602082019050818103600083015261285d816121b5565b9050919050565b6000602082019050818103600083015261287d8161221b565b9050919050565b6000602082019050818103600083015261289d81612281565b9050919050565b600060208201905081810360008301526128bd816122e7565b9050919050565b600060208201905081810360008301526128dd81612327565b9050919050565b600060208201905081810360008301526128fd8161238d565b9050919050565b6000602082019050818103600083015261291d816123f3565b9050919050565b6000602082019050818103600083015261293d81612459565b9050919050565b6000602082019050818103600083015261295d816124bf565b9050919050565b6000602082019050818103600083015261297d816124ff565b9050919050565b6000602082019050818103600083015261299d81612565565b9050919050565b600060208201905081810360008301526129bd816125cb565b9050919050565b600060208201905081810360008301526129dd81612631565b9050919050565b600060208201905081810360008301526129fd81612697565b9050919050565b6000602082019050612a1960008301846126fd565b92915050565b6000604051905081810181811067ffffffffffffffff82111715612a4657612a45612d9d565b5b8060405250919050565b600067ffffffffffffffff821115612a6b57612a6a612d9d565b5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115612a9b57612a9a612d9d565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000612afe82612c18565b9150612b0983612c18565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612b3e57612b3d612d10565b5b828201905092915050565b6000612b5482612c18565b9150612b5f83612c18565b925082612b6f57612b6e612d3f565b5b828204905092915050565b6000612b8582612c18565b9150612b9083612c18565b925082821015612ba357612ba2612d10565b5b828203905092915050565b6000612bb982612bf8565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015612c4f578082015181840152602081019050612c34565b83811115612c5e576000848401525b50505050565b60006002820490506001821680612c7c57607f821691505b60208210811415612c9057612c8f612d6e565b5b50919050565b6000612ca182612c18565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612cd457612cd3612d10565b5b600182019050919050565b6000612cea82612c18565b9150612cf583612c18565b925082612d0557612d04612d3f565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b612de681612bae565b8114612df157600080fd5b50565b612dfd81612bc0565b8114612e0857600080fd5b50565b612e1481612bcc565b8114612e1f57600080fd5b50565b612e2b81612c18565b8114612e3657600080fd5b5056fea2646970667358221220367d9da988741fe33c66e34210ac3ab768739eccc1ee97181a7f9434ff3eabbf64736f6c63430008000033",
  "immutableReferences": {},
  "sourceMap": "116:1631:0:-:0;;;151:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;772:93;;;;;;;;;;1316:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1390:5;1382;:13;;;;;;;;;;;;:::i;:::-;;1415:7;1405;:17;;;;;;;;;;;;:::i;:::-;;1316:113;;831:10:0::1;819:9;;:22;;;;;;;;;;;;;;;;;;851:7;855:2;851:3;;;:7;;:::i;:::-;116:1631:::0;;209:59;260:1;247:10;:14;;;;209:59;:::o;116:1631::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:320:11:-;;88:1;82:4;78:12;68:22;;135:1;129:4;125:12;156:18;146:2;;212:4;204:6;200:17;190:27;;146:2;274;266:6;263:14;243:18;240:38;237:2;;;293:18;;:::i;:::-;237:2;58:269;;;;:::o;333:180::-;381:77;378:1;371:88;478:4;475:1;468:15;502:4;499:1;492:15;116:1631:0;;;;;;;",
  "deployedSourceMap": "116:1631:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1496:300:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2414:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3925:217;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3463:401;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1481:264:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;356:83;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4789:330:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1023:452:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5185:179:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;209:59:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2117:235:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;274:76:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1855:205:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2576:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4209:290;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5430:320;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;514:25:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2744:329:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4565:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;545:24:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1496:300:2;1598:4;1648:25;1633:40;;;:11;:40;;;;:104;;;;1704:33;1689:48;;;:11;:48;;;;1633:104;:156;;;;1753:36;1777:11;1753:23;:36::i;:::-;1633:156;1614:175;;1496:300;;;:::o;2414:98::-;2468:13;2500:5;2493:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2414:98;:::o;3925:217::-;4001:7;4028:16;4036:7;4028;:16::i;:::-;4020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;4111:15;:24;4127:7;4111:24;;;;;;;;;;;;;;;;;;;;;4104:31;;3925:217;;;:::o;3463:401::-;3543:13;3559:23;3574:7;3559:14;:23::i;:::-;3543:39;;3606:5;3600:11;;:2;:11;;;;3592:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3697:5;3681:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3706:37;3723:5;3730:12;:10;:12::i;:::-;3706:16;:37::i;:::-;3681:62;3660:165;;;;;;;;;;;;:::i;:::-;;;;;;;;;3836:21;3845:2;3849:7;3836:8;:21::i;:::-;3463:401;;;:::o;1481:264:0:-;1580:9;;;;;;;;;;;1566:23;;:10;:23;;;1558:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1643:7;1653:8;:15;;;;1643:25;;1678:8;1692:17;;;;;;;;1700:5;1692:17;;;;1707:1;1692:17;;;1678:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;1720:18;1730:3;1735:2;1720:9;:18::i;:::-;1481:264;;;:::o;356:83::-;396:13;427:5;420:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;356:83;:::o;4789:330:2:-;4978:41;4997:12;:10;:12::i;:::-;5011:7;4978:18;:41::i;:::-;4970:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;5084:28;5094:4;5100:2;5104:7;5084:9;:28::i;:::-;4789:330;;;:::o;1023:452:0:-;1106:17;950:10;927:33;;:19;935:10;927:7;:19::i;:::-;:33;;;919:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;1135:24:::1;1162:8;1171:17;1162:27;;;;;;;;;;;;;;;;;;;;;;;;;;1135:54;;1199:24;1226:8;1235:17;1226:27;;;;;;;;;;;;;;;;;;;;;;;;;;1199:54;;1286:8;:14;;;1268:8;:14;;;:32;1264:205;;1334:1;1316:8;:14;;;:19;;;;;;;:::i;:::-;;;;;;;;1367:1;1349:8;:14;;;:19;;;;;;;:::i;:::-;;;;;;;;1264:205;;;1424:1;1406:8;:14;;;:19;;;;;;;:::i;:::-;;;;;;;;1457:1;1439:8;:14;;;:19;;;;;;;:::i;:::-;;;;;;;;1264:205;1009:1;;1023:452:::0;;;:::o;5185:179:2:-;5318:39;5335:4;5341:2;5345:7;5318:39;;;;;;;;;;;;:16;:39::i;:::-;5185:179;;;:::o;209:59:0:-;260:1;247:10;:14;;;;209:59;:::o;2117:235:2:-;2189:7;2208:13;2224:7;:16;2232:7;2224:16;;;;;;;;;;;;;;;;;;;;;2208:32;;2275:1;2258:19;;:5;:19;;;;2250:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2340:5;2333:12;;;2117:235;;;:::o;274:76:0:-;310:4;333:10;;326:17;;274:76;:::o;1855:205:2:-;1927:7;1971:1;1954:19;;:5;:19;;;;1946:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;2037:9;:16;2047:5;2037:16;;;;;;;;;;;;;;;;2030:23;;1855:205;;;:::o;2576:102::-;2632:13;2664:7;2657:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2576:102;:::o;4209:290::-;4323:12;:10;:12::i;:::-;4311:24;;:8;:24;;;;4303:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;4421:8;4376:18;:32;4395:12;:10;:12::i;:::-;4376:32;;;;;;;;;;;;;;;:42;4409:8;4376:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;4473:8;4444:48;;4459:12;:10;:12::i;:::-;4444:48;;;4483:8;4444:48;;;;;;:::i;:::-;;;;;;;;4209:290;;:::o;5430:320::-;5599:41;5618:12;:10;:12::i;:::-;5632:7;5599:18;:41::i;:::-;5591:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;5704:39;5718:4;5724:2;5728:7;5737:5;5704:13;:39::i;:::-;5430:320;;;;:::o;514:25:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2744:329:2:-;2817:13;2850:16;2858:7;2850;:16::i;:::-;2842:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;2929:21;2953:10;:8;:10::i;:::-;2929:34;;3004:1;2986:7;2980:21;:25;:86;;;;;;;;;;;;;;;;;3032:7;3041:18;:7;:16;:18::i;:::-;3015:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2980:86;2973:93;;;2744:329;;;:::o;4565:162::-;4662:4;4685:18;:25;4704:5;4685:25;;;;;;;;;;;;;;;:35;4711:8;4685:35;;;;;;;;;;;;;;;;;;;;;;;;;4678:42;;4565:162;;;;:::o;545:24:0:-;;;;;;;;;;;;;:::o;763:155:9:-;848:4;886:25;871:40;;;:11;:40;;;;864:47;;763:155;;;:::o;7222:125:2:-;7287:4;7338:1;7310:30;;:7;:16;7318:7;7310:16;;;;;;;;;;;;;;;;;;;;;:30;;;;7303:37;;7222:125;;;:::o;587:96:7:-;640:7;666:10;659:17;;587:96;:::o;11073:171:2:-;11174:2;11147:15;:24;11163:7;11147:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;11229:7;11225:2;11191:46;;11200:23;11215:7;11200:14;:23::i;:::-;11191:46;;;;;;;;;;;;11073:171;;:::o;8179:108::-;8254:26;8264:2;8268:7;8254:26;;;;;;;;;;;;:9;:26::i;:::-;8179:108;;:::o;7505:344::-;7598:4;7622:16;7630:7;7622;:16::i;:::-;7614:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:13;7713:23;7728:7;7713:14;:23::i;:::-;7697:39;;7765:5;7754:16;;:7;:16;;;:51;;;;7798:7;7774:31;;:20;7786:7;7774:11;:20::i;:::-;:31;;;7754:51;:87;;;;7809:32;7826:5;7833:7;7809:16;:32::i;:::-;7754:87;7746:96;;;7505:344;;;;:::o;10402:560::-;10556:4;10529:31;;:23;10544:7;10529:14;:23::i;:::-;:31;;;10521:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;10638:1;10624:16;;:2;:16;;;;10616:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;10692:39;10713:4;10719:2;10723:7;10692:20;:39::i;:::-;10793:29;10810:1;10814:7;10793:8;:29::i;:::-;10852:1;10833:9;:15;10843:4;10833:15;;;;;;;;;;;;;;;;:20;;;;;;;:::i;:::-;;;;;;;;10880:1;10863:9;:13;10873:2;10863:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;10910:2;10891:7;:16;10899:7;10891:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;10947:7;10943:2;10928:27;;10937:4;10928:27;;;;;;;;;;;;10402:560;;;:::o;6612:307::-;6763:28;6773:4;6779:2;6783:7;6763:9;:28::i;:::-;6809:48;6832:4;6838:2;6842:7;6851:5;6809:22;:48::i;:::-;6801:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;6612:307;;;;:::o;3314:92::-;3365:13;3390:9;;;;;;;;;;;;;;3314:92;:::o;275:703:8:-;331:13;557:1;548:5;:10;544:51;;;574:10;;;;;;;;;;;;;;;;;;;;;544:51;604:12;619:5;604:20;;634:14;658:75;673:1;665:4;:9;658:75;;690:8;;;;;:::i;:::-;;;;720:2;712:10;;;;;:::i;:::-;;;658:75;;;742:19;774:6;764:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;742:39;;791:150;807:1;798:5;:10;791:150;;834:1;824:11;;;;;:::i;:::-;;;900:2;892:5;:10;;;;:::i;:::-;879:2;:24;;;;:::i;:::-;866:39;;849:6;856;849:14;;;;;;;;;;;;;;;;;;;:56;;;;;;;;;;;928:2;919:11;;;;;:::i;:::-;;;791:150;;;964:6;950:21;;;;;275:703;;;;:::o;8508:311:2:-;8633:18;8639:2;8643:7;8633:5;:18::i;:::-;8682:54;8713:1;8717:2;8721:7;8730:5;8682:22;:54::i;:::-;8661:151;;;;;;;;;;;;:::i;:::-;;;;;;;;;8508:311;;;:::o;13131:122::-;;;;:::o;11797:778::-;11947:4;11967:15;:2;:13;;;:15::i;:::-;11963:606;;;12018:2;12002:36;;;12039:12;:10;:12::i;:::-;12053:4;12059:7;12068:5;12002:72;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;11998:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12258:1;12241:6;:13;:18;12237:266;;;12283:60;;;;;;;;;;:::i;:::-;;;;;;;;12237:266;12455:6;12449:13;12440:6;12436:2;12432:15;12425:38;11998:519;12134:41;;;12124:51;;;:6;:51;;;;12117:58;;;;;11963:606;12554:4;12547:11;;11797:778;;;;;;;:::o;9141:372::-;9234:1;9220:16;;:2;:16;;;;9212:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9292:16;9300:7;9292;:16::i;:::-;9291:17;9283:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9352:45;9381:1;9385:2;9389:7;9352:20;:45::i;:::-;9425:1;9408:9;:13;9418:2;9408:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;9455:2;9436:7;:16;9444:7;9436:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9498:7;9494:2;9473:33;;9490:1;9473:33;;;;;;;;;;;;9141:372;;:::o;718:377:6:-;778:4;981:12;1046:7;1034:20;1026:28;;1087:1;1080:4;:8;1073:15;;;718:377;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:342:11:-;;109:64;124:48;165:6;124:48;:::i;:::-;109:64;:::i;:::-;100:73;;196:6;189:5;182:21;234:4;227:5;223:16;272:3;263:6;258:3;254:16;251:25;248:2;;;289:1;286;279:12;248:2;302:41;336:6;331:3;326;302:41;:::i;:::-;90:259;;;;;;:::o;355:344::-;;458:65;473:49;515:6;473:49;:::i;:::-;458:65;:::i;:::-;449:74;;546:6;539:5;532:21;584:4;577:5;573:16;622:3;613:6;608:3;604:16;601:25;598:2;;;639:1;636;629:12;598:2;652:41;686:6;681:3;676;652:41;:::i;:::-;439:260;;;;;;:::o;705:139::-;;789:6;776:20;767:29;;805:33;832:5;805:33;:::i;:::-;757:87;;;;:::o;850:133::-;;931:6;918:20;909:29;;947:30;971:5;947:30;:::i;:::-;899:84;;;;:::o;989:137::-;;1072:6;1059:20;1050:29;;1088:32;1114:5;1088:32;:::i;:::-;1040:86;;;;:::o;1132:141::-;;1219:6;1213:13;1204:22;;1235:32;1261:5;1235:32;:::i;:::-;1194:79;;;;:::o;1292:271::-;;1396:3;1389:4;1381:6;1377:17;1373:27;1363:2;;1414:1;1411;1404:12;1363:2;1454:6;1441:20;1479:78;1553:3;1545:6;1538:4;1530:6;1526:17;1479:78;:::i;:::-;1470:87;;1353:210;;;;;:::o;1583:273::-;;1688:3;1681:4;1673:6;1669:17;1665:27;1655:2;;1706:1;1703;1696:12;1655:2;1746:6;1733:20;1771:79;1846:3;1838:6;1831:4;1823:6;1819:17;1771:79;:::i;:::-;1762:88;;1645:211;;;;;:::o;1862:139::-;;1946:6;1933:20;1924:29;;1962:33;1989:5;1962:33;:::i;:::-;1914:87;;;;:::o;2007:262::-;;2115:2;2103:9;2094:7;2090:23;2086:32;2083:2;;;2131:1;2128;2121:12;2083:2;2174:1;2199:53;2244:7;2235:6;2224:9;2220:22;2199:53;:::i;:::-;2189:63;;2145:117;2073:196;;;;:::o;2275:407::-;;;2400:2;2388:9;2379:7;2375:23;2371:32;2368:2;;;2416:1;2413;2406:12;2368:2;2459:1;2484:53;2529:7;2520:6;2509:9;2505:22;2484:53;:::i;:::-;2474:63;;2430:117;2586:2;2612:53;2657:7;2648:6;2637:9;2633:22;2612:53;:::i;:::-;2602:63;;2557:118;2358:324;;;;;:::o;2688:552::-;;;;2830:2;2818:9;2809:7;2805:23;2801:32;2798:2;;;2846:1;2843;2836:12;2798:2;2889:1;2914:53;2959:7;2950:6;2939:9;2935:22;2914:53;:::i;:::-;2904:63;;2860:117;3016:2;3042:53;3087:7;3078:6;3067:9;3063:22;3042:53;:::i;:::-;3032:63;;2987:118;3144:2;3170:53;3215:7;3206:6;3195:9;3191:22;3170:53;:::i;:::-;3160:63;;3115:118;2788:452;;;;;:::o;3246:809::-;;;;;3414:3;3402:9;3393:7;3389:23;3385:33;3382:2;;;3431:1;3428;3421:12;3382:2;3474:1;3499:53;3544:7;3535:6;3524:9;3520:22;3499:53;:::i;:::-;3489:63;;3445:117;3601:2;3627:53;3672:7;3663:6;3652:9;3648:22;3627:53;:::i;:::-;3617:63;;3572:118;3729:2;3755:53;3800:7;3791:6;3780:9;3776:22;3755:53;:::i;:::-;3745:63;;3700:118;3885:2;3874:9;3870:18;3857:32;3916:18;3908:6;3905:30;3902:2;;;3948:1;3945;3938:12;3902:2;3976:62;4030:7;4021:6;4010:9;4006:22;3976:62;:::i;:::-;3966:72;;3828:220;3372:683;;;;;;;:::o;4061:401::-;;;4183:2;4171:9;4162:7;4158:23;4154:32;4151:2;;;4199:1;4196;4189:12;4151:2;4242:1;4267:53;4312:7;4303:6;4292:9;4288:22;4267:53;:::i;:::-;4257:63;;4213:117;4369:2;4395:50;4437:7;4428:6;4417:9;4413:22;4395:50;:::i;:::-;4385:60;;4340:115;4141:321;;;;;:::o;4468:407::-;;;4593:2;4581:9;4572:7;4568:23;4564:32;4561:2;;;4609:1;4606;4599:12;4561:2;4652:1;4677:53;4722:7;4713:6;4702:9;4698:22;4677:53;:::i;:::-;4667:63;;4623:117;4779:2;4805:53;4850:7;4841:6;4830:9;4826:22;4805:53;:::i;:::-;4795:63;;4750:118;4551:324;;;;;:::o;4881:260::-;;4988:2;4976:9;4967:7;4963:23;4959:32;4956:2;;;5004:1;5001;4994:12;4956:2;5047:1;5072:52;5116:7;5107:6;5096:9;5092:22;5072:52;:::i;:::-;5062:62;;5018:116;4946:195;;;;:::o;5147:282::-;;5265:2;5253:9;5244:7;5240:23;5236:32;5233:2;;;5281:1;5278;5271:12;5233:2;5324:1;5349:63;5404:7;5395:6;5384:9;5380:22;5349:63;:::i;:::-;5339:73;;5295:127;5223:206;;;;:::o;5435:520::-;;;5570:2;5558:9;5549:7;5545:23;5541:32;5538:2;;;5586:1;5583;5576:12;5538:2;5657:1;5646:9;5642:17;5629:31;5687:18;5679:6;5676:30;5673:2;;;5719:1;5716;5709:12;5673:2;5747:63;5802:7;5793:6;5782:9;5778:22;5747:63;:::i;:::-;5737:73;;5600:220;5859:2;5885:53;5930:7;5921:6;5910:9;5906:22;5885:53;:::i;:::-;5875:63;;5830:118;5528:427;;;;;:::o;5961:262::-;;6069:2;6057:9;6048:7;6044:23;6040:32;6037:2;;;6085:1;6082;6075:12;6037:2;6128:1;6153:53;6198:7;6189:6;6178:9;6174:22;6153:53;:::i;:::-;6143:63;;6099:117;6027:196;;;;:::o;6229:407::-;;;6354:2;6342:9;6333:7;6329:23;6325:32;6322:2;;;6370:1;6367;6360:12;6322:2;6413:1;6438:53;6483:7;6474:6;6463:9;6459:22;6438:53;:::i;:::-;6428:63;;6384:117;6540:2;6566:53;6611:7;6602:6;6591:9;6587:22;6566:53;:::i;:::-;6556:63;;6511:118;6312:324;;;;;:::o;6642:118::-;6729:24;6747:5;6729:24;:::i;:::-;6724:3;6717:37;6707:53;;:::o;6766:109::-;6847:21;6862:5;6847:21;:::i;:::-;6842:3;6835:34;6825:50;;:::o;6881:360::-;;6995:38;7027:5;6995:38;:::i;:::-;7049:70;7112:6;7107:3;7049:70;:::i;:::-;7042:77;;7128:52;7173:6;7168:3;7161:4;7154:5;7150:16;7128:52;:::i;:::-;7205:29;7227:6;7205:29;:::i;:::-;7200:3;7196:39;7189:46;;6971:270;;;;;:::o;7247:364::-;;7363:39;7396:5;7363:39;:::i;:::-;7418:71;7482:6;7477:3;7418:71;:::i;:::-;7411:78;;7498:52;7543:6;7538:3;7531:4;7524:5;7520:16;7498:52;:::i;:::-;7575:29;7597:6;7575:29;:::i;:::-;7570:3;7566:39;7559:46;;7339:272;;;;;:::o;7617:377::-;;7751:39;7784:5;7751:39;:::i;:::-;7806:89;7888:6;7883:3;7806:89;:::i;:::-;7799:96;;7904:52;7949:6;7944:3;7937:4;7930:5;7926:16;7904:52;:::i;:::-;7981:6;7976:3;7972:16;7965:23;;7727:267;;;;;:::o;8000:382::-;;8163:67;8227:2;8222:3;8163:67;:::i;:::-;8156:74;;8260:34;8256:1;8251:3;8247:11;8240:55;8326:20;8321:2;8316:3;8312:12;8305:42;8373:2;8368:3;8364:12;8357:19;;8146:236;;;:::o;8388:326::-;;8551:67;8615:2;8610:3;8551:67;:::i;:::-;8544:74;;8648:30;8644:1;8639:3;8635:11;8628:51;8705:2;8700:3;8696:12;8689:19;;8534:180;;;:::o;8720:371::-;;8883:67;8947:2;8942:3;8883:67;:::i;:::-;8876:74;;8980:34;8976:1;8971:3;8967:11;8960:55;9046:9;9041:2;9036:3;9032:12;9025:31;9082:2;9077:3;9073:12;9066:19;;8866:225;;;:::o;9097:366::-;;9260:67;9324:2;9319:3;9260:67;:::i;:::-;9253:74;;9357:34;9353:1;9348:3;9344:11;9337:55;9423:4;9418:2;9413:3;9409:12;9402:26;9454:2;9449:3;9445:12;9438:19;;9243:220;;;:::o;9469:368::-;;9632:67;9696:2;9691:3;9632:67;:::i;:::-;9625:74;;9729:34;9725:1;9720:3;9716:11;9709:55;9795:6;9790:2;9785:3;9781:12;9774:28;9828:2;9823:3;9819:12;9812:19;;9615:222;;;:::o;9843:323::-;;10006:67;10070:2;10065:3;10006:67;:::i;:::-;9999:74;;10103:27;10099:1;10094:3;10090:11;10083:48;10157:2;10152:3;10148:12;10141:19;;9989:177;;;:::o;10172:376::-;;10335:67;10399:2;10394:3;10335:67;:::i;:::-;10328:74;;10432:34;10428:1;10423:3;10419:11;10412:55;10498:14;10493:2;10488:3;10484:12;10477:36;10539:2;10534:3;10530:12;10523:19;;10318:230;;;:::o;10554:388::-;;10717:67;10781:2;10776:3;10717:67;:::i;:::-;10710:74;;10814:34;10810:1;10805:3;10801:11;10794:55;10880:26;10875:2;10870:3;10866:12;10859:48;10933:2;10928:3;10924:12;10917:19;;10700:242;;;:::o;10948:374::-;;11111:67;11175:2;11170:3;11111:67;:::i;:::-;11104:74;;11208:34;11204:1;11199:3;11195:11;11188:55;11274:12;11269:2;11264:3;11260:12;11253:34;11313:2;11308:3;11304:12;11297:19;;11094:228;;;:::o;11328:373::-;;11491:67;11555:2;11550:3;11491:67;:::i;:::-;11484:74;;11588:34;11584:1;11579:3;11575:11;11568:55;11654:11;11649:2;11644:3;11640:12;11633:33;11692:2;11687:3;11683:12;11676:19;;11474:227;;;:::o;11707:330::-;;11870:67;11934:2;11929:3;11870:67;:::i;:::-;11863:74;;11967:34;11963:1;11958:3;11954:11;11947:55;12028:2;12023:3;12019:12;12012:19;;11853:184;;;:::o;12043:376::-;;12206:67;12270:2;12265:3;12206:67;:::i;:::-;12199:74;;12303:34;12299:1;12294:3;12290:11;12283:55;12369:14;12364:2;12359:3;12355:12;12348:36;12410:2;12405:3;12401:12;12394:19;;12189:230;;;:::o;12425:373::-;;12588:67;12652:2;12647:3;12588:67;:::i;:::-;12581:74;;12685:34;12681:1;12676:3;12672:11;12665:55;12751:11;12746:2;12741:3;12737:12;12730:33;12789:2;12784:3;12780:12;12773:19;;12571:227;;;:::o;12804:379::-;;12967:67;13031:2;13026:3;12967:67;:::i;:::-;12960:74;;13064:34;13060:1;13055:3;13051:11;13044:55;13130:17;13125:2;13120:3;13116:12;13109:39;13174:2;13169:3;13165:12;13158:19;;12950:233;;;:::o;13189:365::-;;13352:67;13416:2;13411:3;13352:67;:::i;:::-;13345:74;;13449:34;13445:1;13440:3;13436:11;13429:55;13515:3;13510:2;13505:3;13501:12;13494:25;13545:2;13540:3;13536:12;13529:19;;13335:219;;;:::o;13560:381::-;;13723:67;13787:2;13782:3;13723:67;:::i;:::-;13716:74;;13820:34;13816:1;13811:3;13807:11;13800:55;13886:19;13881:2;13876:3;13872:12;13865:41;13932:2;13927:3;13923:12;13916:19;;13706:235;;;:::o;13947:118::-;14034:24;14052:5;14034:24;:::i;:::-;14029:3;14022:37;14012:53;;:::o;14071:435::-;;14273:95;14364:3;14355:6;14273:95;:::i;:::-;14266:102;;14385:95;14476:3;14467:6;14385:95;:::i;:::-;14378:102;;14497:3;14490:10;;14255:251;;;;;:::o;14512:222::-;;14643:2;14632:9;14628:18;14620:26;;14656:71;14724:1;14713:9;14709:17;14700:6;14656:71;:::i;:::-;14610:124;;;;:::o;14740:640::-;;14973:3;14962:9;14958:19;14950:27;;14987:71;15055:1;15044:9;15040:17;15031:6;14987:71;:::i;:::-;15068:72;15136:2;15125:9;15121:18;15112:6;15068:72;:::i;:::-;15150;15218:2;15207:9;15203:18;15194:6;15150:72;:::i;:::-;15269:9;15263:4;15259:20;15254:2;15243:9;15239:18;15232:48;15297:76;15368:4;15359:6;15297:76;:::i;:::-;15289:84;;14940:440;;;;;;;:::o;15386:210::-;;15511:2;15500:9;15496:18;15488:26;;15524:65;15586:1;15575:9;15571:17;15562:6;15524:65;:::i;:::-;15478:118;;;;:::o;15602:313::-;;15753:2;15742:9;15738:18;15730:26;;15802:9;15796:4;15792:20;15788:1;15777:9;15773:17;15766:47;15830:78;15903:4;15894:6;15830:78;:::i;:::-;15822:86;;15720:195;;;;:::o;15921:423::-;;16100:2;16089:9;16085:18;16077:26;;16149:9;16143:4;16139:20;16135:1;16124:9;16120:17;16113:47;16177:78;16250:4;16241:6;16177:78;:::i;:::-;16169:86;;16265:72;16333:2;16322:9;16318:18;16309:6;16265:72;:::i;:::-;16067:277;;;;;:::o;16350:419::-;;16554:2;16543:9;16539:18;16531:26;;16603:9;16597:4;16593:20;16589:1;16578:9;16574:17;16567:47;16631:131;16757:4;16631:131;:::i;:::-;16623:139;;16521:248;;;:::o;16775:419::-;;16979:2;16968:9;16964:18;16956:26;;17028:9;17022:4;17018:20;17014:1;17003:9;16999:17;16992:47;17056:131;17182:4;17056:131;:::i;:::-;17048:139;;16946:248;;;:::o;17200:419::-;;17404:2;17393:9;17389:18;17381:26;;17453:9;17447:4;17443:20;17439:1;17428:9;17424:17;17417:47;17481:131;17607:4;17481:131;:::i;:::-;17473:139;;17371:248;;;:::o;17625:419::-;;17829:2;17818:9;17814:18;17806:26;;17878:9;17872:4;17868:20;17864:1;17853:9;17849:17;17842:47;17906:131;18032:4;17906:131;:::i;:::-;17898:139;;17796:248;;;:::o;18050:419::-;;18254:2;18243:9;18239:18;18231:26;;18303:9;18297:4;18293:20;18289:1;18278:9;18274:17;18267:47;18331:131;18457:4;18331:131;:::i;:::-;18323:139;;18221:248;;;:::o;18475:419::-;;18679:2;18668:9;18664:18;18656:26;;18728:9;18722:4;18718:20;18714:1;18703:9;18699:17;18692:47;18756:131;18882:4;18756:131;:::i;:::-;18748:139;;18646:248;;;:::o;18900:419::-;;19104:2;19093:9;19089:18;19081:26;;19153:9;19147:4;19143:20;19139:1;19128:9;19124:17;19117:47;19181:131;19307:4;19181:131;:::i;:::-;19173:139;;19071:248;;;:::o;19325:419::-;;19529:2;19518:9;19514:18;19506:26;;19578:9;19572:4;19568:20;19564:1;19553:9;19549:17;19542:47;19606:131;19732:4;19606:131;:::i;:::-;19598:139;;19496:248;;;:::o;19750:419::-;;19954:2;19943:9;19939:18;19931:26;;20003:9;19997:4;19993:20;19989:1;19978:9;19974:17;19967:47;20031:131;20157:4;20031:131;:::i;:::-;20023:139;;19921:248;;;:::o;20175:419::-;;20379:2;20368:9;20364:18;20356:26;;20428:9;20422:4;20418:20;20414:1;20403:9;20399:17;20392:47;20456:131;20582:4;20456:131;:::i;:::-;20448:139;;20346:248;;;:::o;20600:419::-;;20804:2;20793:9;20789:18;20781:26;;20853:9;20847:4;20843:20;20839:1;20828:9;20824:17;20817:47;20881:131;21007:4;20881:131;:::i;:::-;20873:139;;20771:248;;;:::o;21025:419::-;;21229:2;21218:9;21214:18;21206:26;;21278:9;21272:4;21268:20;21264:1;21253:9;21249:17;21242:47;21306:131;21432:4;21306:131;:::i;:::-;21298:139;;21196:248;;;:::o;21450:419::-;;21654:2;21643:9;21639:18;21631:26;;21703:9;21697:4;21693:20;21689:1;21678:9;21674:17;21667:47;21731:131;21857:4;21731:131;:::i;:::-;21723:139;;21621:248;;;:::o;21875:419::-;;22079:2;22068:9;22064:18;22056:26;;22128:9;22122:4;22118:20;22114:1;22103:9;22099:17;22092:47;22156:131;22282:4;22156:131;:::i;:::-;22148:139;;22046:248;;;:::o;22300:419::-;;22504:2;22493:9;22489:18;22481:26;;22553:9;22547:4;22543:20;22539:1;22528:9;22524:17;22517:47;22581:131;22707:4;22581:131;:::i;:::-;22573:139;;22471:248;;;:::o;22725:419::-;;22929:2;22918:9;22914:18;22906:26;;22978:9;22972:4;22968:20;22964:1;22953:9;22949:17;22942:47;23006:131;23132:4;23006:131;:::i;:::-;22998:139;;22896:248;;;:::o;23150:222::-;;23281:2;23270:9;23266:18;23258:26;;23294:71;23362:1;23351:9;23347:17;23338:6;23294:71;:::i;:::-;23248:124;;;;:::o;23378:283::-;;23444:2;23438:9;23428:19;;23486:4;23478:6;23474:17;23593:6;23581:10;23578:22;23557:18;23545:10;23542:34;23539:62;23536:2;;;23604:18;;:::i;:::-;23536:2;23644:10;23640:2;23633:22;23418:243;;;;:::o;23667:331::-;;23818:18;23810:6;23807:30;23804:2;;;23840:18;;:::i;:::-;23804:2;23925:4;23921:9;23914:4;23906:6;23902:17;23898:33;23890:41;;23986:4;23980;23976:15;23968:23;;23733:265;;;:::o;24004:332::-;;24156:18;24148:6;24145:30;24142:2;;;24178:18;;:::i;:::-;24142:2;24263:4;24259:9;24252:4;24244:6;24240:17;24236:33;24228:41;;24324:4;24318;24314:15;24306:23;;24071:265;;;:::o;24342:98::-;;24427:5;24421:12;24411:22;;24400:40;;;:::o;24446:99::-;;24532:5;24526:12;24516:22;;24505:40;;;:::o;24551:168::-;;24668:6;24663:3;24656:19;24708:4;24703:3;24699:14;24684:29;;24646:73;;;;:::o;24725:169::-;;24843:6;24838:3;24831:19;24883:4;24878:3;24874:14;24859:29;;24821:73;;;;:::o;24900:148::-;;25039:3;25024:18;;25014:34;;;;:::o;25054:305::-;;25113:20;25131:1;25113:20;:::i;:::-;25108:25;;25147:20;25165:1;25147:20;:::i;:::-;25142:25;;25301:1;25233:66;25229:74;25226:1;25223:81;25220:2;;;25307:18;;:::i;:::-;25220:2;25351:1;25348;25344:9;25337:16;;25098:261;;;;:::o;25365:185::-;;25422:20;25440:1;25422:20;:::i;:::-;25417:25;;25456:20;25474:1;25456:20;:::i;:::-;25451:25;;25495:1;25485:2;;25500:18;;:::i;:::-;25485:2;25542:1;25539;25535:9;25530:14;;25407:143;;;;:::o;25556:191::-;;25616:20;25634:1;25616:20;:::i;:::-;25611:25;;25650:20;25668:1;25650:20;:::i;:::-;25645:25;;25689:1;25686;25683:8;25680:2;;;25694:18;;:::i;:::-;25680:2;25739:1;25736;25732:9;25724:17;;25601:146;;;;:::o;25753:96::-;;25819:24;25837:5;25819:24;:::i;:::-;25808:35;;25798:51;;;:::o;25855:90::-;;25932:5;25925:13;25918:21;25907:32;;25897:48;;;:::o;25951:149::-;;26027:66;26020:5;26016:78;26005:89;;25995:105;;;:::o;26106:126::-;;26183:42;26176:5;26172:54;26161:65;;26151:81;;;:::o;26238:77::-;;26304:5;26293:16;;26283:32;;;:::o;26321:154::-;26405:6;26400:3;26395;26382:30;26467:1;26458:6;26453:3;26449:16;26442:27;26372:103;;;:::o;26481:307::-;26549:1;26559:113;26573:6;26570:1;26567:13;26559:113;;;26658:1;26653:3;26649:11;26643:18;26639:1;26634:3;26630:11;26623:39;26595:2;26592:1;26588:10;26583:15;;26559:113;;;26690:6;26687:1;26684:13;26681:2;;;26770:1;26761:6;26756:3;26752:16;26745:27;26681:2;26530:258;;;;:::o;26794:320::-;;26875:1;26869:4;26865:12;26855:22;;26922:1;26916:4;26912:12;26943:18;26933:2;;26999:4;26991:6;26987:17;26977:27;;26933:2;27061;27053:6;27050:14;27030:18;27027:38;27024:2;;;27080:18;;:::i;:::-;27024:2;26845:269;;;;:::o;27120:233::-;;27182:24;27200:5;27182:24;:::i;:::-;27173:33;;27228:66;27221:5;27218:77;27215:2;;;27298:18;;:::i;:::-;27215:2;27345:1;27338:5;27334:13;27327:20;;27163:190;;;:::o;27359:176::-;;27408:20;27426:1;27408:20;:::i;:::-;27403:25;;27442:20;27460:1;27442:20;:::i;:::-;27437:25;;27481:1;27471:2;;27486:18;;:::i;:::-;27471:2;27527:1;27524;27520:9;27515:14;;27393:142;;;;:::o;27541:180::-;27589:77;27586:1;27579:88;27686:4;27683:1;27676:15;27710:4;27707:1;27700:15;27727:180;27775:77;27772:1;27765:88;27872:4;27869:1;27862:15;27896:4;27893:1;27886:15;27913:180;27961:77;27958:1;27951:88;28058:4;28055:1;28048:15;28082:4;28079:1;28072:15;28099:180;28147:77;28144:1;28137:88;28244:4;28241:1;28234:15;28268:4;28265:1;28258:15;28285:102;;28377:2;28373:7;28368:2;28361:5;28357:14;28353:28;28343:38;;28333:54;;;:::o;28393:122::-;28466:24;28484:5;28466:24;:::i;:::-;28459:5;28456:35;28446:2;;28505:1;28502;28495:12;28446:2;28436:79;:::o;28521:116::-;28591:21;28606:5;28591:21;:::i;:::-;28584:5;28581:32;28571:2;;28627:1;28624;28617:12;28571:2;28561:76;:::o;28643:120::-;28715:23;28732:5;28715:23;:::i;:::-;28708:5;28705:34;28695:2;;28753:1;28750;28743:12;28695:2;28685:78;:::o;28769:122::-;28842:24;28860:5;28842:24;:::i;:::-;28835:5;28832:35;28822:2;;28881:1;28878;28871:12;28822:2;28812:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n\ncontract Ethermon is ERC721 {\n\n    string monji = \"i tried \";\n    \n    uint myVariable;\n\n    function set(uint x) public {\n        myVariable = x;\n    }\n\n    function get() view public returns (uint) {\n        return myVariable;\n    }\n\n    function getMonji() view public returns(string memory) {\n       return monji;\n    }\n\n    struct Monster {\n        string name;\n        uint level;\n    }\n\n    Monster[] public monsters;\n    address public gameOwner;\n\n    //function getMonster(uint  addr) public view returns() {\n        //return monsters[addr];\n    //}\n\n    //function returnMonsters(uint _monsterId) public {\n        //return monsters;\n    //}\n\n    constructor() ERC721 ( \"AB\" ,  \"CC\") {\n        gameOwner = msg.sender;\n        set(78);\n    }\n\n    modifier onlyOwnerOf(uint _monsterId) {\n        require(ownerOf(_monsterId) == msg.sender, \"Must be owner of monster to battle\");\n        _;\n    }\n\n    function battle(uint _attackingMonster, uint _defendingMonster) public onlyOwnerOf(_attackingMonster) {\n        Monster storage attacker = monsters[_attackingMonster];\n        Monster storage defender = monsters[_defendingMonster];\n\n        if (attacker.level >= defender.level) {\n            attacker.level += 2;\n            defender.level += 1;\n        }\n        else{\n            attacker.level += 1;\n            attacker.level += 2;\n        }\n    }\n\n    function createNewMonster(string memory _name, address _to) public {\n        require(msg.sender == gameOwner, \"Only game owner can create new monsters\");\n        uint id = monsters.length;\n        monsters.push(Monster(_name, 1));\n        _safeMint(_to, id);\n    }\n}\n\n",
  "sourcePath": "C:/all code/Blockchain/my-pokemon/contracts/Ethermon.sol",
  "ast": {
    "absolutePath": "/C/all code/Blockchain/my-pokemon/contracts/Ethermon.sol",
    "exportedSymbols": {
      "Address": [
        1483
      ],
      "Context": [
        1505
      ],
      "ERC165": [
        1732
      ],
      "ERC721": [
        1025
      ],
      "Ethermon": [
        172
      ],
      "IERC165": [
        1744
      ],
      "IERC721": [
        1141
      ],
      "IERC721Metadata": [
        1186
      ],
      "IERC721Receiver": [
        1159
      ],
      "Strings": [
        1708
      ]
    },
    "id": 173,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 173,
        "sourceUnit": 1026,
        "src": "57:57:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3,
              "name": "ERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1025,
              "src": "137:6:0"
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "137:6:0"
          }
        ],
        "contractDependencies": [
          1025,
          1141,
          1186,
          1505,
          1732,
          1744
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 172,
        "linearizedBaseContracts": [
          172,
          1025,
          1186,
          1141,
          1732,
          1744,
          1505
        ],
        "name": "Ethermon",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7,
            "mutability": "mutable",
            "name": "monji",
            "nodeType": "VariableDeclaration",
            "scope": 172,
            "src": "151:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 5,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "151:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "6920747269656420",
              "id": 6,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "166:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_4376cf43213832021150e688f85940d6bd9922013e862949243e46eb34e5deba",
                "typeString": "literal_string \"i tried \""
              },
              "value": "i tried "
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 9,
            "mutability": "mutable",
            "name": "myVariable",
            "nodeType": "VariableDeclaration",
            "scope": 172,
            "src": "187:15:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "187:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 18,
              "nodeType": "Block",
              "src": "237:31:0",
              "statements": [
                {
                  "expression": {
                    "id": 16,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14,
                      "name": "myVariable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "247:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "260:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "247:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 17,
                  "nodeType": "ExpressionStatement",
                  "src": "247:14:0"
                }
              ]
            },
            "functionSelector": "60fe47b1",
            "id": 19,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "set",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11,
                  "mutability": "mutable",
                  "name": "x",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "222:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "222:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "221:8:0"
            },
            "returnParameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "237:0:0"
            },
            "scope": 172,
            "src": "209:59:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 26,
              "nodeType": "Block",
              "src": "316:34:0",
              "statements": [
                {
                  "expression": {
                    "id": 24,
                    "name": "myVariable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9,
                    "src": "333:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 23,
                  "id": 25,
                  "nodeType": "Return",
                  "src": "326:17:0"
                }
              ]
            },
            "functionSelector": "6d4ce63c",
            "id": 27,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "286:2:0"
            },
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "310:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "310:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "309:6:0"
            },
            "scope": 172,
            "src": "274:76:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 34,
              "nodeType": "Block",
              "src": "411:28:0",
              "statements": [
                {
                  "expression": {
                    "id": 32,
                    "name": "monji",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7,
                    "src": "427:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 31,
                  "id": 33,
                  "nodeType": "Return",
                  "src": "420:12:0"
                }
              ]
            },
            "functionSelector": "1bc9ed1d",
            "id": 35,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMonji",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "373:2:0"
            },
            "returnParameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "396:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "396:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "395:15:0"
            },
            "scope": 172,
            "src": "356:83:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "canonicalName": "Ethermon.Monster",
            "id": 40,
            "members": [
              {
                "constant": false,
                "id": 37,
                "mutability": "mutable",
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "470:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 36,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "470:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 39,
                "mutability": "mutable",
                "name": "level",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "491:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 38,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "491:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Monster",
            "nodeType": "StructDefinition",
            "scope": 172,
            "src": "445:63:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c0576b73",
            "id": 44,
            "mutability": "mutable",
            "name": "monsters",
            "nodeType": "VariableDeclaration",
            "scope": 172,
            "src": "514:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Monster_$40_storage_$dyn_storage",
              "typeString": "struct Ethermon.Monster[]"
            },
            "typeName": {
              "baseType": {
                "id": 42,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 41,
                  "name": "Monster",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "514:7:0"
                },
                "referencedDeclaration": 40,
                "src": "514:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Monster_$40_storage_ptr",
                  "typeString": "struct Ethermon.Monster"
                }
              },
              "id": 43,
              "nodeType": "ArrayTypeName",
              "src": "514:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Monster_$40_storage_$dyn_storage_ptr",
                "typeString": "struct Ethermon.Monster[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f6b12f28",
            "id": 46,
            "mutability": "mutable",
            "name": "gameOwner",
            "nodeType": "VariableDeclaration",
            "scope": 172,
            "src": "545:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "545:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 62,
              "nodeType": "Block",
              "src": "809:56:0",
              "statements": [
                {
                  "expression": {
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53,
                      "name": "gameOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "819:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 54,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "831:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 55,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "831:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "819:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 57,
                  "nodeType": "ExpressionStatement",
                  "src": "819:22:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3738",
                        "id": 59,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "855:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_78_by_1",
                          "typeString": "int_const 78"
                        },
                        "value": "78"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_78_by_1",
                          "typeString": "int_const 78"
                        }
                      ],
                      "id": 58,
                      "name": "set",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "851:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "851:7:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61,
                  "nodeType": "ExpressionStatement",
                  "src": "851:7:0"
                }
              ]
            },
            "id": 63,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4142",
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "795:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_21faab852d29e39c56dc14d20d71ba15c1ea83a26f45b658b5e8d0f8d61f3bbd",
                      "typeString": "literal_string \"AB\""
                    },
                    "value": "AB"
                  },
                  {
                    "hexValue": "4343",
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "803:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_56d96069d0c85d21b8d789da2cd39ba97ceec51143707e32ecb8343eb4258a9c",
                      "typeString": "literal_string \"CC\""
                    },
                    "value": "CC"
                  }
                ],
                "id": 51,
                "modifierName": {
                  "id": 48,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1025,
                  "src": "786:6:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "786:22:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "783:2:0"
            },
            "returnParameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "809:0:0"
            },
            "scope": 172,
            "src": "772:93:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 78,
              "nodeType": "Block",
              "src": "909:108:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 69,
                              "name": "_monsterId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "935:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 68,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 355,
                            "src": "927:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "927:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 71,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "950:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 72,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "950:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "927:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757374206265206f776e6572206f66206d6f6e7374657220746f20626174746c65",
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "962:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_398e17316f7b20c18dc53a11b49708f2af08d4b0513a78bea553c9399b5b3363",
                          "typeString": "literal_string \"Must be owner of monster to battle\""
                        },
                        "value": "Must be owner of monster to battle"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_398e17316f7b20c18dc53a11b49708f2af08d4b0513a78bea553c9399b5b3363",
                          "typeString": "literal_string \"Must be owner of monster to battle\""
                        }
                      ],
                      "id": 67,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "919:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "919:80:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "919:80:0"
                },
                {
                  "id": 77,
                  "nodeType": "PlaceholderStatement",
                  "src": "1009:1:0"
                }
              ]
            },
            "id": 79,
            "name": "onlyOwnerOf",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "mutability": "mutable",
                  "name": "_monsterId",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "892:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "892:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "891:17:0"
            },
            "src": "871:146:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 135,
              "nodeType": "Block",
              "src": "1125:350:0",
              "statements": [
                {
                  "assignments": [
                    91
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91,
                      "mutability": "mutable",
                      "name": "attacker",
                      "nodeType": "VariableDeclaration",
                      "scope": 135,
                      "src": "1135:24:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Monster_$40_storage_ptr",
                        "typeString": "struct Ethermon.Monster"
                      },
                      "typeName": {
                        "id": 90,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 89,
                          "name": "Monster",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 40,
                          "src": "1135:7:0"
                        },
                        "referencedDeclaration": 40,
                        "src": "1135:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Monster_$40_storage_ptr",
                          "typeString": "struct Ethermon.Monster"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 95,
                  "initialValue": {
                    "baseExpression": {
                      "id": 92,
                      "name": "monsters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "1162:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Monster_$40_storage_$dyn_storage",
                        "typeString": "struct Ethermon.Monster storage ref[] storage ref"
                      }
                    },
                    "id": 94,
                    "indexExpression": {
                      "id": 93,
                      "name": "_attackingMonster",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "1171:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1162:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Monster_$40_storage",
                      "typeString": "struct Ethermon.Monster storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1135:54:0"
                },
                {
                  "assignments": [
                    98
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98,
                      "mutability": "mutable",
                      "name": "defender",
                      "nodeType": "VariableDeclaration",
                      "scope": 135,
                      "src": "1199:24:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Monster_$40_storage_ptr",
                        "typeString": "struct Ethermon.Monster"
                      },
                      "typeName": {
                        "id": 97,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 96,
                          "name": "Monster",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 40,
                          "src": "1199:7:0"
                        },
                        "referencedDeclaration": 40,
                        "src": "1199:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Monster_$40_storage_ptr",
                          "typeString": "struct Ethermon.Monster"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102,
                  "initialValue": {
                    "baseExpression": {
                      "id": 99,
                      "name": "monsters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "1226:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Monster_$40_storage_$dyn_storage",
                        "typeString": "struct Ethermon.Monster storage ref[] storage ref"
                      }
                    },
                    "id": 101,
                    "indexExpression": {
                      "id": 100,
                      "name": "_defendingMonster",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "1235:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1226:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Monster_$40_storage",
                      "typeString": "struct Ethermon.Monster storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1199:54:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 103,
                        "name": "attacker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "1268:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Monster_$40_storage_ptr",
                          "typeString": "struct Ethermon.Monster storage pointer"
                        }
                      },
                      "id": 104,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "level",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "1268:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "expression": {
                        "id": 105,
                        "name": "defender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "1286:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Monster_$40_storage_ptr",
                          "typeString": "struct Ethermon.Monster storage pointer"
                        }
                      },
                      "id": 106,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "level",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "1286:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1268:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 133,
                    "nodeType": "Block",
                    "src": "1392:77:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 121,
                              "name": "attacker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91,
                              "src": "1406:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Monster_$40_storage_ptr",
                                "typeString": "struct Ethermon.Monster storage pointer"
                              }
                            },
                            "id": 123,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39,
                            "src": "1406:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1424:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1406:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 126,
                        "nodeType": "ExpressionStatement",
                        "src": "1406:19:0"
                      },
                      {
                        "expression": {
                          "id": 131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 127,
                              "name": "attacker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91,
                              "src": "1439:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Monster_$40_storage_ptr",
                                "typeString": "struct Ethermon.Monster storage pointer"
                              }
                            },
                            "id": 129,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39,
                            "src": "1439:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "32",
                            "id": 130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1457:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "1439:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 132,
                        "nodeType": "ExpressionStatement",
                        "src": "1439:19:0"
                      }
                    ]
                  },
                  "id": 134,
                  "nodeType": "IfStatement",
                  "src": "1264:205:0",
                  "trueBody": {
                    "id": 120,
                    "nodeType": "Block",
                    "src": "1302:77:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 108,
                              "name": "attacker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91,
                              "src": "1316:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Monster_$40_storage_ptr",
                                "typeString": "struct Ethermon.Monster storage pointer"
                              }
                            },
                            "id": 110,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39,
                            "src": "1316:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "32",
                            "id": 111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1334:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "1316:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 113,
                        "nodeType": "ExpressionStatement",
                        "src": "1316:19:0"
                      },
                      {
                        "expression": {
                          "id": 118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 114,
                              "name": "defender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98,
                              "src": "1349:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Monster_$40_storage_ptr",
                                "typeString": "struct Ethermon.Monster storage pointer"
                              }
                            },
                            "id": 116,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39,
                            "src": "1349:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1367:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1349:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 119,
                        "nodeType": "ExpressionStatement",
                        "src": "1349:19:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "2a0c5221",
            "id": 136,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 86,
                    "name": "_attackingMonster",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 81,
                    "src": "1106:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 87,
                "modifierName": {
                  "id": 85,
                  "name": "onlyOwnerOf",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 79,
                  "src": "1094:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1094:30:0"
              }
            ],
            "name": "battle",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "mutability": "mutable",
                  "name": "_attackingMonster",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "1039:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1039:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "mutability": "mutable",
                  "name": "_defendingMonster",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "1063:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1063:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1038:48:0"
            },
            "returnParameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1125:0:0"
            },
            "scope": 172,
            "src": "1023:452:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 170,
              "nodeType": "Block",
              "src": "1548:197:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 144,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1566:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1566:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 146,
                          "name": "gameOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "1580:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1566:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792067616d65206f776e65722063616e20637265617465206e6577206d6f6e7374657273",
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1591:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_36c714259474746d1b277d8d5b28b0ee1f424eed791bf4abf829869ee35f42d4",
                          "typeString": "literal_string \"Only game owner can create new monsters\""
                        },
                        "value": "Only game owner can create new monsters"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_36c714259474746d1b277d8d5b28b0ee1f424eed791bf4abf829869ee35f42d4",
                          "typeString": "literal_string \"Only game owner can create new monsters\""
                        }
                      ],
                      "id": 143,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1558:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1558:75:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "1558:75:0"
                },
                {
                  "assignments": [
                    152
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 152,
                      "mutability": "mutable",
                      "name": "id",
                      "nodeType": "VariableDeclaration",
                      "scope": 170,
                      "src": "1643:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 151,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1643:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 155,
                  "initialValue": {
                    "expression": {
                      "id": 153,
                      "name": "monsters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "1653:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Monster_$40_storage_$dyn_storage",
                        "typeString": "struct Ethermon.Monster storage ref[] storage ref"
                      }
                    },
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1653:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1643:25:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 160,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 138,
                            "src": "1700:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1707:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 159,
                          "name": "Monster",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40,
                          "src": "1692:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Monster_$40_storage_ptr_$",
                            "typeString": "type(struct Ethermon.Monster storage pointer)"
                          }
                        },
                        "id": 162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1692:17:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Monster_$40_memory_ptr",
                          "typeString": "struct Ethermon.Monster memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Monster_$40_memory_ptr",
                          "typeString": "struct Ethermon.Monster memory"
                        }
                      ],
                      "expression": {
                        "id": 156,
                        "name": "monsters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "1678:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Monster_$40_storage_$dyn_storage",
                          "typeString": "struct Ethermon.Monster storage ref[] storage ref"
                        }
                      },
                      "id": 158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1678:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Monster_$40_storage_$returns$__$",
                        "typeString": "function (struct Ethermon.Monster storage ref)"
                      }
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1678:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "1678:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 166,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "1730:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 167,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 152,
                        "src": "1735:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 165,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        721,
                        750
                      ],
                      "referencedDeclaration": 721,
                      "src": "1720:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1720:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "1720:18:0"
                }
              ]
            },
            "functionSelector": "115dd1ab",
            "id": 171,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createNewMonster",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "1507:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1507:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 140,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "1528:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 139,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1528:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1506:34:0"
            },
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1548:0:0"
            },
            "scope": 172,
            "src": "1481:264:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 173,
        "src": "116:1631:0"
      }
    ],
    "src": "32:1717:0"
  },
  "legacyAST": {
    "absolutePath": "/C/all code/Blockchain/my-pokemon/contracts/Ethermon.sol",
    "exportedSymbols": {
      "Address": [
        1483
      ],
      "Context": [
        1505
      ],
      "ERC165": [
        1732
      ],
      "ERC721": [
        1025
      ],
      "Ethermon": [
        172
      ],
      "IERC165": [
        1744
      ],
      "IERC721": [
        1141
      ],
      "IERC721Metadata": [
        1186
      ],
      "IERC721Receiver": [
        1159
      ],
      "Strings": [
        1708
      ]
    },
    "id": 173,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 173,
        "sourceUnit": 1026,
        "src": "57:57:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3,
              "name": "ERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1025,
              "src": "137:6:0"
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "137:6:0"
          }
        ],
        "contractDependencies": [
          1025,
          1141,
          1186,
          1505,
          1732,
          1744
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 172,
        "linearizedBaseContracts": [
          172,
          1025,
          1186,
          1141,
          1732,
          1744,
          1505
        ],
        "name": "Ethermon",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7,
            "mutability": "mutable",
            "name": "monji",
            "nodeType": "VariableDeclaration",
            "scope": 172,
            "src": "151:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 5,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "151:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "6920747269656420",
              "id": 6,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "166:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_4376cf43213832021150e688f85940d6bd9922013e862949243e46eb34e5deba",
                "typeString": "literal_string \"i tried \""
              },
              "value": "i tried "
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 9,
            "mutability": "mutable",
            "name": "myVariable",
            "nodeType": "VariableDeclaration",
            "scope": 172,
            "src": "187:15:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "187:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 18,
              "nodeType": "Block",
              "src": "237:31:0",
              "statements": [
                {
                  "expression": {
                    "id": 16,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14,
                      "name": "myVariable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "247:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "260:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "247:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 17,
                  "nodeType": "ExpressionStatement",
                  "src": "247:14:0"
                }
              ]
            },
            "functionSelector": "60fe47b1",
            "id": 19,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "set",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11,
                  "mutability": "mutable",
                  "name": "x",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "222:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "222:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "221:8:0"
            },
            "returnParameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "237:0:0"
            },
            "scope": 172,
            "src": "209:59:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 26,
              "nodeType": "Block",
              "src": "316:34:0",
              "statements": [
                {
                  "expression": {
                    "id": 24,
                    "name": "myVariable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9,
                    "src": "333:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 23,
                  "id": 25,
                  "nodeType": "Return",
                  "src": "326:17:0"
                }
              ]
            },
            "functionSelector": "6d4ce63c",
            "id": 27,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "286:2:0"
            },
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "310:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "310:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "309:6:0"
            },
            "scope": 172,
            "src": "274:76:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 34,
              "nodeType": "Block",
              "src": "411:28:0",
              "statements": [
                {
                  "expression": {
                    "id": 32,
                    "name": "monji",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7,
                    "src": "427:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 31,
                  "id": 33,
                  "nodeType": "Return",
                  "src": "420:12:0"
                }
              ]
            },
            "functionSelector": "1bc9ed1d",
            "id": 35,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMonji",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "373:2:0"
            },
            "returnParameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "396:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "396:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "395:15:0"
            },
            "scope": 172,
            "src": "356:83:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "canonicalName": "Ethermon.Monster",
            "id": 40,
            "members": [
              {
                "constant": false,
                "id": 37,
                "mutability": "mutable",
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "470:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 36,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "470:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 39,
                "mutability": "mutable",
                "name": "level",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "491:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 38,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "491:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Monster",
            "nodeType": "StructDefinition",
            "scope": 172,
            "src": "445:63:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c0576b73",
            "id": 44,
            "mutability": "mutable",
            "name": "monsters",
            "nodeType": "VariableDeclaration",
            "scope": 172,
            "src": "514:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Monster_$40_storage_$dyn_storage",
              "typeString": "struct Ethermon.Monster[]"
            },
            "typeName": {
              "baseType": {
                "id": 42,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 41,
                  "name": "Monster",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "514:7:0"
                },
                "referencedDeclaration": 40,
                "src": "514:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Monster_$40_storage_ptr",
                  "typeString": "struct Ethermon.Monster"
                }
              },
              "id": 43,
              "nodeType": "ArrayTypeName",
              "src": "514:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Monster_$40_storage_$dyn_storage_ptr",
                "typeString": "struct Ethermon.Monster[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f6b12f28",
            "id": 46,
            "mutability": "mutable",
            "name": "gameOwner",
            "nodeType": "VariableDeclaration",
            "scope": 172,
            "src": "545:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "545:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 62,
              "nodeType": "Block",
              "src": "809:56:0",
              "statements": [
                {
                  "expression": {
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53,
                      "name": "gameOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "819:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 54,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "831:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 55,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "831:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "819:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 57,
                  "nodeType": "ExpressionStatement",
                  "src": "819:22:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3738",
                        "id": 59,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "855:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_78_by_1",
                          "typeString": "int_const 78"
                        },
                        "value": "78"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_78_by_1",
                          "typeString": "int_const 78"
                        }
                      ],
                      "id": 58,
                      "name": "set",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "851:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "851:7:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61,
                  "nodeType": "ExpressionStatement",
                  "src": "851:7:0"
                }
              ]
            },
            "id": 63,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4142",
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "795:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_21faab852d29e39c56dc14d20d71ba15c1ea83a26f45b658b5e8d0f8d61f3bbd",
                      "typeString": "literal_string \"AB\""
                    },
                    "value": "AB"
                  },
                  {
                    "hexValue": "4343",
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "803:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_56d96069d0c85d21b8d789da2cd39ba97ceec51143707e32ecb8343eb4258a9c",
                      "typeString": "literal_string \"CC\""
                    },
                    "value": "CC"
                  }
                ],
                "id": 51,
                "modifierName": {
                  "id": 48,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1025,
                  "src": "786:6:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "786:22:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "783:2:0"
            },
            "returnParameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "809:0:0"
            },
            "scope": 172,
            "src": "772:93:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 78,
              "nodeType": "Block",
              "src": "909:108:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 69,
                              "name": "_monsterId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "935:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 68,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 355,
                            "src": "927:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "927:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 71,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "950:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 72,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "950:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "927:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757374206265206f776e6572206f66206d6f6e7374657220746f20626174746c65",
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "962:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_398e17316f7b20c18dc53a11b49708f2af08d4b0513a78bea553c9399b5b3363",
                          "typeString": "literal_string \"Must be owner of monster to battle\""
                        },
                        "value": "Must be owner of monster to battle"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_398e17316f7b20c18dc53a11b49708f2af08d4b0513a78bea553c9399b5b3363",
                          "typeString": "literal_string \"Must be owner of monster to battle\""
                        }
                      ],
                      "id": 67,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "919:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "919:80:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "919:80:0"
                },
                {
                  "id": 77,
                  "nodeType": "PlaceholderStatement",
                  "src": "1009:1:0"
                }
              ]
            },
            "id": 79,
            "name": "onlyOwnerOf",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "mutability": "mutable",
                  "name": "_monsterId",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "892:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "892:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "891:17:0"
            },
            "src": "871:146:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 135,
              "nodeType": "Block",
              "src": "1125:350:0",
              "statements": [
                {
                  "assignments": [
                    91
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91,
                      "mutability": "mutable",
                      "name": "attacker",
                      "nodeType": "VariableDeclaration",
                      "scope": 135,
                      "src": "1135:24:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Monster_$40_storage_ptr",
                        "typeString": "struct Ethermon.Monster"
                      },
                      "typeName": {
                        "id": 90,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 89,
                          "name": "Monster",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 40,
                          "src": "1135:7:0"
                        },
                        "referencedDeclaration": 40,
                        "src": "1135:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Monster_$40_storage_ptr",
                          "typeString": "struct Ethermon.Monster"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 95,
                  "initialValue": {
                    "baseExpression": {
                      "id": 92,
                      "name": "monsters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "1162:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Monster_$40_storage_$dyn_storage",
                        "typeString": "struct Ethermon.Monster storage ref[] storage ref"
                      }
                    },
                    "id": 94,
                    "indexExpression": {
                      "id": 93,
                      "name": "_attackingMonster",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "1171:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1162:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Monster_$40_storage",
                      "typeString": "struct Ethermon.Monster storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1135:54:0"
                },
                {
                  "assignments": [
                    98
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98,
                      "mutability": "mutable",
                      "name": "defender",
                      "nodeType": "VariableDeclaration",
                      "scope": 135,
                      "src": "1199:24:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Monster_$40_storage_ptr",
                        "typeString": "struct Ethermon.Monster"
                      },
                      "typeName": {
                        "id": 97,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 96,
                          "name": "Monster",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 40,
                          "src": "1199:7:0"
                        },
                        "referencedDeclaration": 40,
                        "src": "1199:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Monster_$40_storage_ptr",
                          "typeString": "struct Ethermon.Monster"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102,
                  "initialValue": {
                    "baseExpression": {
                      "id": 99,
                      "name": "monsters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "1226:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Monster_$40_storage_$dyn_storage",
                        "typeString": "struct Ethermon.Monster storage ref[] storage ref"
                      }
                    },
                    "id": 101,
                    "indexExpression": {
                      "id": 100,
                      "name": "_defendingMonster",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "1235:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1226:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Monster_$40_storage",
                      "typeString": "struct Ethermon.Monster storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1199:54:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 103,
                        "name": "attacker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "1268:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Monster_$40_storage_ptr",
                          "typeString": "struct Ethermon.Monster storage pointer"
                        }
                      },
                      "id": 104,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "level",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "1268:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "expression": {
                        "id": 105,
                        "name": "defender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "1286:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Monster_$40_storage_ptr",
                          "typeString": "struct Ethermon.Monster storage pointer"
                        }
                      },
                      "id": 106,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "level",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "1286:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1268:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 133,
                    "nodeType": "Block",
                    "src": "1392:77:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 121,
                              "name": "attacker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91,
                              "src": "1406:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Monster_$40_storage_ptr",
                                "typeString": "struct Ethermon.Monster storage pointer"
                              }
                            },
                            "id": 123,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39,
                            "src": "1406:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1424:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1406:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 126,
                        "nodeType": "ExpressionStatement",
                        "src": "1406:19:0"
                      },
                      {
                        "expression": {
                          "id": 131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 127,
                              "name": "attacker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91,
                              "src": "1439:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Monster_$40_storage_ptr",
                                "typeString": "struct Ethermon.Monster storage pointer"
                              }
                            },
                            "id": 129,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39,
                            "src": "1439:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "32",
                            "id": 130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1457:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "1439:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 132,
                        "nodeType": "ExpressionStatement",
                        "src": "1439:19:0"
                      }
                    ]
                  },
                  "id": 134,
                  "nodeType": "IfStatement",
                  "src": "1264:205:0",
                  "trueBody": {
                    "id": 120,
                    "nodeType": "Block",
                    "src": "1302:77:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 108,
                              "name": "attacker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91,
                              "src": "1316:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Monster_$40_storage_ptr",
                                "typeString": "struct Ethermon.Monster storage pointer"
                              }
                            },
                            "id": 110,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39,
                            "src": "1316:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "32",
                            "id": 111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1334:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "1316:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 113,
                        "nodeType": "ExpressionStatement",
                        "src": "1316:19:0"
                      },
                      {
                        "expression": {
                          "id": 118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 114,
                              "name": "defender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98,
                              "src": "1349:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Monster_$40_storage_ptr",
                                "typeString": "struct Ethermon.Monster storage pointer"
                              }
                            },
                            "id": 116,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39,
                            "src": "1349:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1367:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1349:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 119,
                        "nodeType": "ExpressionStatement",
                        "src": "1349:19:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "2a0c5221",
            "id": 136,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 86,
                    "name": "_attackingMonster",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 81,
                    "src": "1106:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 87,
                "modifierName": {
                  "id": 85,
                  "name": "onlyOwnerOf",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 79,
                  "src": "1094:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1094:30:0"
              }
            ],
            "name": "battle",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "mutability": "mutable",
                  "name": "_attackingMonster",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "1039:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1039:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "mutability": "mutable",
                  "name": "_defendingMonster",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "1063:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1063:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1038:48:0"
            },
            "returnParameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1125:0:0"
            },
            "scope": 172,
            "src": "1023:452:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 170,
              "nodeType": "Block",
              "src": "1548:197:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 144,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1566:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1566:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 146,
                          "name": "gameOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "1580:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1566:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792067616d65206f776e65722063616e20637265617465206e6577206d6f6e7374657273",
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1591:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_36c714259474746d1b277d8d5b28b0ee1f424eed791bf4abf829869ee35f42d4",
                          "typeString": "literal_string \"Only game owner can create new monsters\""
                        },
                        "value": "Only game owner can create new monsters"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_36c714259474746d1b277d8d5b28b0ee1f424eed791bf4abf829869ee35f42d4",
                          "typeString": "literal_string \"Only game owner can create new monsters\""
                        }
                      ],
                      "id": 143,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1558:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1558:75:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "1558:75:0"
                },
                {
                  "assignments": [
                    152
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 152,
                      "mutability": "mutable",
                      "name": "id",
                      "nodeType": "VariableDeclaration",
                      "scope": 170,
                      "src": "1643:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 151,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1643:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 155,
                  "initialValue": {
                    "expression": {
                      "id": 153,
                      "name": "monsters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "1653:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Monster_$40_storage_$dyn_storage",
                        "typeString": "struct Ethermon.Monster storage ref[] storage ref"
                      }
                    },
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1653:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1643:25:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 160,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 138,
                            "src": "1700:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1707:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 159,
                          "name": "Monster",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40,
                          "src": "1692:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Monster_$40_storage_ptr_$",
                            "typeString": "type(struct Ethermon.Monster storage pointer)"
                          }
                        },
                        "id": 162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1692:17:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Monster_$40_memory_ptr",
                          "typeString": "struct Ethermon.Monster memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Monster_$40_memory_ptr",
                          "typeString": "struct Ethermon.Monster memory"
                        }
                      ],
                      "expression": {
                        "id": 156,
                        "name": "monsters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "1678:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Monster_$40_storage_$dyn_storage",
                          "typeString": "struct Ethermon.Monster storage ref[] storage ref"
                        }
                      },
                      "id": 158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1678:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Monster_$40_storage_$returns$__$",
                        "typeString": "function (struct Ethermon.Monster storage ref)"
                      }
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1678:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "1678:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 166,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "1730:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 167,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 152,
                        "src": "1735:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 165,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        721,
                        750
                      ],
                      "referencedDeclaration": 721,
                      "src": "1720:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1720:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "1720:18:0"
                }
              ]
            },
            "functionSelector": "115dd1ab",
            "id": 171,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createNewMonster",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "1507:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1507:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 140,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "1528:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 139,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1528:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1506:34:0"
            },
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1548:0:0"
            },
            "scope": 172,
            "src": "1481:264:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 173,
        "src": "116:1631:0"
      }
    ],
    "src": "32:1717:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-11-13T07:55:59.072Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}